This is the parameter file for Consensus Iterations

[forceStopFlag] ( if 1, Consensus iterations are forcefully stopped )
0

[MaxIter] Maximum Number of Iterations
1

[StopThresholdPercent] Percentage change below which the algorithm terminates
0

[fwdProxmap_MaxIter] Maximum Number of Iterations in forward model proximal map
3

-------------------------------------------------------------------------------------------
inversion operation mode
-------------------------------------------------------------------------------------------
[consensus_mode] time/view
time

-------------------------------------------------------------------------------------------
consensus algorithm
-------------------------------------------------------------------------------------------
[consensus_algo] CADMM/CE
CADMM

-------------------------------------------------------------------------------------------
PIPELINE
-------------------------------------------------------------------------------------------

[isInitializeRecon] Turn initialization on (1) or off (0).
0

[clearBinaryFolder_start]
0

[isInitializeVars] Turn initialization on (1) or off (0).
1

[isConsensusIters] Turn Consensus iteration on (1) or off (0).
1

[testDenoiser] Just test denoiser
0

[clearBinaryFiles_end]
0

-------------------------------------------------------------------------------------------
SPEED
-------------------------------------------------------------------------------------------

[isParallel_inv_denoising_dec] (if 1, inv and denoising_dec are done in parallel) (only for CE)
1

-------------------------------------------------------------------------------------------
PRIOR
-------------------------------------------------------------------------------------------
[rho] (only for CE)
0.5

[isEstimate_sigma_ref] Turn noise estimation on (1) or off (0);
0

[sigma_ref] reference sigma used to set sigma_lambda and denoiser sigmas
0.1

[inversion_priorWeight] Weight given to the forward model. 							sigma_lambda = 	sigma_ref * sqrt(#)
1

[centralized_priorWeight] Weight given to Centralized prior model. 					sigma_noise = 	sigma_ref * sqrt(#)
1

[decentralized_priorWeightList] List of weights given to Decentralized prior model. sigma_noise = 	sigma_ref * sqrt(#). ( in MATLAB notation )
[1]

[averaging_wtList_relative] (gets normalized to averaging_wtList to make sum=1) (must be one more than len(decentralized_priorWeightList))
[1]

[isFoldedInPrior] Sets priorWeight_QGGMRF to {1/num_viewSubsets when #=1} or {0 when #=0}
0

-------------------------------------------------------------------------------------------
Visualize
-------------------------------------------------------------------------------------------
[visualize_coord]
1
